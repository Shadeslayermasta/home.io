---
- name: Install Automated Pi-hole
  block:
    - name: Ensure pihole Directory Exists
      file:
        path: /etc/pihole
        state: directory
        mode: 0755

    - name: Deploy Pi-hole setup configuration file
      copy:
        src: "files/{{ inventory_hostname }}_setupVars.conf"
        dest: /etc/pihole/setupVars.conf
        force: yes

    - name: Download Pi-hole Install Script
      get_url:
        url: https://install.pi-hole.net
        dest: "{{ pihole_install_script }}"

    - name: Run Pi-hole Install Script
      shell: |
        cat {{ pihole_install_script }} | bash /dev/stdin --unattended

    - name: Set Admin UI Password
      vars:
        admin_ui_password: "{{ lookup('file', 'files/admin-ui.password') }}"
      shell: pihole -a -p {{ admin_ui_password }}
      no_log: yes

    - name: Set Access-Control-Allow-Origin policy
      lineinfile:
        path: /etc/lighttpd/external.conf
        line: setenv.add-response-header = ( "Access-Control-Allow-Origin" => "*" )
        state: present
  become: yes
  become_user: root

- name: Configure Passwordless Sudo
  block:
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      copy:
        content: '%wheel ALL=(ALL:ALL) NOPASSWD: ALL'
        dest: /etc/sudoers.d/wheel_nopasswd
        mode: 0440
      
    - name: Add sudoers users to wheel group
      user:
        name="{{ ansible_user }}"
        groups=wheel
        append=yes
        state=present
        createhome=yes
  become: yes

- name: Set PiHole to update every week
  become: True
  replace:
    path: /etc/cron.d/pihole
    regexp: '^#(.*updatePihole.*)$'
    replace: '\1'
    backup: yes

- name: 'Reboot'
  shell: sleep 2 && reboot
  async: 1
  poll: 0
  ignore_errors: true

- name: "Wait for PiHole to come back"
  local_action: wait_for host={{ ansible_host }} port=22 state=started delay=10
  become: false